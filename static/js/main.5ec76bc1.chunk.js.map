{"version":3,"sources":["components/FormContact/FormContact.module.css","components/ContactsList/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/ContactsList/ContactsList.module.css","components/FormContact/FormContact.js","components/Filter/Filter.js","components/ContactsList/ContactListItem/ContactListItem.js","components/ContactsList/ContactsList.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","form","label","htmlFor","nameInputId","input","type","pattern","onChange","title","required","numberInputId","button","btnText","Component","Filter","filterLabel","filterInput","ContactListItem","contactName","contactNumber","onClickDeleteContact","listItem","listItemText","onClick","ContactList","contacts","onDeleteContact","list","map","id","App","uuidv4","filter","addContact","newContact","find","contact","alert","changeFilter","getVisibleContacts","toLowerCase","includes","deleteContact","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","visibleContacts","FormContact","ContactsList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ec76bc1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormContact_form__1jCo9\",\"label\":\"FormContact_label__2G6P3\",\"input\":\"FormContact_input__2P_BQ\",\"button\":\"FormContact_button__2umha\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__2_-VZ\",\"listItemText\":\"ContactListItem_listItemText__2Kspw\",\"button\":\"ContactListItem_button__3gFCo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__1TeQb\",\"filterInput\":\"Filter_filterInput__u16Kg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2RiYd\"};","import React, { Component } from \"react\";\nimport s from \"./FormContact.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    const { name, number } = this.state;\n    e.preventDefault();\n    this.props.onSubmit(name, number);\n    this.reset();\n  };\n\n  reset() {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  }\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label} htmlFor={this.nameInputId}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={s.label} htmlFor={this.numberInputId}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button className={s.button} type=\"submit\">\n          <span className={s.btnText}>Add contact</span>\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.filterLabel}>\n    <h3>Find contacts by name</h3>\n    <input\n      className={s.filterInput}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import s from \"./ContactListItem.module.css\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ContactListItem = ({\n  contactName,\n  contactNumber,\n  onClickDeleteContact,\n}) => {\n  return (\n    <li className={s.listItem}>\n      <span className={s.listItemText}>{contactName}:</span>\n      <span className={s.listItemText}>{contactNumber}</span>\n      <button className={s.button} type=\"button\" onClick={onClickDeleteContact}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  contactName: PropTypes.string.isRequired,\n  contactNumber: PropTypes.string.isRequired,\n  onClickDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import s from \"./ContactsList.module.css\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={s.list}>\n    {contacts.map(({ id, name, number }) => (\n      <ContactListItem\n        key={id}\n        contactName={name}\n        contactNumber={number}\n        onClickDeleteContact={() => onDeleteContact(id)}\n      />\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport FormContact from \"./components/FormContact/FormContact\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactsList from \"./components/ContactsList/ContactsList\";\nimport \"./app.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: uuidv4(), name: \"Марина Соколова\", number: \"459-12-56\" },\n      { id: uuidv4(), name: \"Денис Степанов\", number: \"443-89-12\" },\n      { id: uuidv4(), name: \"Вадим Обрамов\", number: \"645-17-79\" },\n      { id: uuidv4(), name: \"Елена Степанова\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    const { contacts } = this.state;\n\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    }\n  }\n\n  addContact = (name, number) => {\n    const { contacts } = this.state;\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    if (contacts.find((contact) => contact.name === newContact.name)) {\n      alert(`${newContact.name} is already in contacts.`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n\n        <FormContact onSubmit={this.addContact} />\n\n        <h2>Contants</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactsList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        ></ContactsList>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}